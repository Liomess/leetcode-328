# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if head==None:
            return None
        if head.next==None or head.next.next==None:
            return head
        d1=ListNode()
        temp1=d1
        d2=ListNode()
        temp2=d2
        temp1.next=head
        temp1=temp1.next
        temp2.next=head.next
        temp2=temp2.next
        while (temp2!=None) and (temp2.next!=None):
            temp1.next=temp1.next.next
            temp1=temp1.next
            temp2.next=temp1.next
            temp2=temp2.next
        temp1.next=d2.next
        return d1.next


             
